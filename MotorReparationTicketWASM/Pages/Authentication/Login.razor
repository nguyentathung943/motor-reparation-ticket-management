@page "/login"
@using DataModel.Authentication
@using System.Web
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<h3>LOGIN</h3>

<EditForm Model="LoginCredentials" OnValidSubmit="onFormSubmitHandler">
    <DataAnnotationsValidator />
    <ValidationSummary/>
    <div class="form-group">
        <label>Email</label>
        <InputText @bind-Value="LoginCredentials.Email" class="form-control"></InputText>
        <ValidationMessage For="() => LoginCredentials.Email"></ValidationMessage>
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText type="password" @bind-Value="LoginCredentials.Password" class="form-control"></InputText>
        <ValidationMessage For="() => LoginCredentials.Password"></ValidationMessage>
    </div>

    <div class="form-group mt-4">
        <button class="btn btn-primary">Login</button>
        <NavLink href="/register" class="btn btn-secondary">Register</NavLink>
    </div>
</EditForm>

@code {
    LoginDTO LoginCredentials = new LoginDTO() { };
    public string ReturnUrl { get; set; }

    public async Task onFormSubmitHandler()
    {
        try
        {
            var loginResponseDTO = await AuthenticationService.Login(LoginCredentials);
            if (loginResponseDTO.IsAuthSuccessful)
            {
                var absoluteUri = new Uri(NavigationManager.Uri);
                var queryParam = HttpUtility.ParseQueryString(absoluteUri.Query);
                ReturnUrl = queryParam["returnUrl"];
                if (string.IsNullOrEmpty(ReturnUrl))
                {
                    NavigationManager.NavigateTo("/");
                }
                else
                {
                    NavigationManager.NavigateTo("/" + ReturnUrl);
                }
            }
            else
            {
                ToastService.ShowError(loginResponseDTO.ErrorMessage);
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
    }
}
