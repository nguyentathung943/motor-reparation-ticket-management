@page "/ticket/{ticketId:int}/items"
@using MotorReparationTicketWASM.Service.IService
@inject NavigationManager _navigationManager
@inject ITicketHttpService TicketHttpService;

@if (TicketWorkItems.Any())
{
@*	<table class="table table-primary">
		<thead>
		<tr>
			<th scope="col">Id</th>
			<th scope="col">Title</th>
			<th scope="col">Description</th>
			<th scope="col">Status</th>
			<th scope="col">Methods</th>
		</tr>
		</thead>
		<tbody>
		@foreach(var Ticket in Tickets)
		{
			<tr>
				<th scope="row">@Ticket.Id</th>
				<td>@Ticket.Title</td>
				<td>@Ticket.Description</td>
				<td>@Ticket.TicketStatus</td>
				<td>
					<button type="button" class="btn btn-primary">Edit</button>
					<button type="button" class="btn btn-danger">Delete</button>
					<button type="button" class="btn btn-info">View Work Items</button>
				</td>
			</tr>
		}
		</tbody>
	</table>*@
}
else
{
	<div class="text-info">
		No Work Item Available for ticket with ID @ticketId
	</div>
}

<button type="button" class="btn btn-primary">Add Work Item for ticket with ID @ticketId</button>

@code {

	[Parameter]
	private int ticketId { get; set;} 

	private List<TicketWorkItemDTO> TicketWorkItems { get; set; } = new List<TicketWorkItemDTO> { };

	protected async override Task OnInitializedAsync()
	{

	}


	private void onDeleteTicketButtonClicked(int ticketId)
	{
	  
	}

	private void onEditTicketButtonClicked(int ticketId)
	{
		_navigationManager.NavigateTo($"/tickets/{ticketId}");
	}
}